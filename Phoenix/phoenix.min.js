"use strict";!function(t){var r={};t.on=function(e,n){var i=new Event(e,n);if(i)return(r[i.hash()]=i).hash()},t.off=function(e){var n=r[e];n&&(n.disable(),delete r[e])},t.once=function(e,n){var i=t.on(e,function(){!1!==n.apply(null,arguments)&&t.off(i)})}}(Event),function(r){var o={};r.on=function(e,n,i){var t=new Key(e,n,i);if(t)return(o[t.hash()]=t).hash()},r.off=function(e){var n=o[e];n&&(n.disable(),delete o[e])},r.once=function(e,n,i){var t=r.on(e,n,function(){!1!==i.apply(null,arguments)&&r.off(t)})}}(Key),Modal.build=function(e){var i=new Modal;return _(e).omit("origin").each(function(e,n){i[n]=e}),_(e.origin).isFunction()&&(i.origin=e.origin(i.frame())),i},Screen.prototype.frameInRectangle=function(){return Phoenix.log("Deprecated: Function Screen#frameInRectangle() is deprecated and will be removed in later versions, use Screen#flippedFrame() instead."),this.flippedFrame()},Screen.prototype.visibleFrameInRectangle=function(){return Phoenix.log("Deprecated: Function Screen#visibleFrameInRectangle() is deprecated and will be removed in later versions, use Screen#flippedVisibleFrame() instead."),this.flippedVisibleFrame()},Space.prototype.screen=function(){return Phoenix.log("Deprecated: Function Space#screen() is deprecated and will be removed in later versions, use Space#screens() instead."),_.first(this.screens())},function(e){var r={};e.run=function(e,n,i){var t=new Task(e,n,function(e){i&&i(e),Task.terminate(e.hash())});return(r[t.hash()]=t).hash()},e.terminate=function(e){var n=r[e];n&&(n.terminate(),delete r[e])}}(Task),function(e){var t={};e.after=function(e,n){var i=new Timer(e,!1,function(e){n(e),Timer.off(e.hash())});return(t[i.hash()]=i).hash()},e.every=function(e,n){var i=new Timer(e,!0,n);return(t[i.hash()]=i).hash()},e.off=function(e){var n=t[e];n&&(n.stop(),delete t[e])}}(Timer),this.clearTimeout=Timer.off,this.clearInterval=Timer.off,this.setTimeout=function(e,n){return Timer.after(n/1e3,e)},this.setInterval=function(e,n){return Timer.every(n/1e3,e)},Window.prototype.isMinimised=Window.prototype.isMinimized,Window.prototype.maximise=Window.prototype.maximize,Window.prototype.minimise=Window.prototype.minimize,Window.prototype.unminimise=Window.prototype.unminimize,Window.prototype.neighbours=Window.prototype.neighbors,Window.prototype.focusClosestNeighbour=Window.prototype.focusClosestNeighbor;